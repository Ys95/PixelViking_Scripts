//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.1
//     from Assets/Scripts/Player/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Land"",
            ""id"": ""4228ae31-1c54-4bb1-a500-c07cbe88c12f"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""ea893c75-6499-4c11-8a9c-876a851495d6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""bbc97b44-d09d-49e0-9516-ce728938d158"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelJump"",
                    ""type"": ""Button"",
                    ""id"": ""f2d20b34-626b-4805-aad9-aecbae691d8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""dfbf85d5-1410-4f9d-81a2-5a20a4f28f60"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""6f4c4a38-1ea2-4b82-baee-eab2e80acc00"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickSlot 1"",
                    ""type"": ""Button"",
                    ""id"": ""0937f6b3-f676-45a2-bfd4-466eddebeca8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickSlot 2"",
                    ""type"": ""Button"",
                    ""id"": ""78f5fc65-5905-4bcd-9edb-5bd7b5ce0748"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickSlot 3"",
                    ""type"": ""Button"",
                    ""id"": ""5cdfcb6f-3c00-4351-b10e-559edc046973"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickSlot 4"",
                    ""type"": ""Button"",
                    ""id"": ""fa42b5bf-3315-4f8c-b451-3aa9909a16df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""LeftRight"",
                    ""id"": ""25754b14-0160-48f1-a609-6420f444d8d1"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""64ab0a9d-3161-4cfd-9e8a-556fa0c41b2f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7a4d7a8b-4b8d-4987-ab95-d0950a71ff1e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c2d2b686-9560-42cb-8d12-87e58751be0d"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15c8ef8c-271f-4b79-9876-dad2253b26ad"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e30ce337-519d-45ad-b5d0-a63c4c1095cf"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd25edb2-b07b-48d6-a37d-64f767406436"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuickSlot 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c52b5fc1-8746-46da-a3ff-55ae91b3fb87"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuickSlot 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef5a9d6b-4122-4203-a711-d8f3b0f71395"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuickSlot 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aadf9a0c-5223-4671-93fb-346869180a2a"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuickSlot 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ee82f76-bf39-4fcf-bfd7-d37b4ed663cb"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7632ba1-2029-4b9f-85bc-d43d781fa188"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Grab"",
            ""id"": ""93105ddd-a9e7-461d-a939-a8ee9ef59780"",
            ""actions"": [
                {
                    ""name"": ""Wiggling"",
                    ""type"": ""Value"",
                    ""id"": ""0218464c-f5c6-469b-9486-01860ca8d696"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""JumpOff"",
                    ""type"": ""Button"",
                    ""id"": ""025ac803-8e72-4f2a-8f3f-7925988040a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""LeftRight"",
                    ""id"": ""e4ab525f-8921-4607-83b9-3b887eb8e037"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wiggling"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4c541df5-b9bf-4d4a-8c93-0a412579cfc4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wiggling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7bfe8a31-4621-4111-a4ab-1ea52f80fccb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wiggling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""be74eef5-0eb5-48b2-8384-2e6e3ca85355"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpOff"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Land
        m_Land = asset.FindActionMap("Land", throwIfNotFound: true);
        m_Land_Movement = m_Land.FindAction("Movement", throwIfNotFound: true);
        m_Land_Jump = m_Land.FindAction("Jump", throwIfNotFound: true);
        m_Land_CancelJump = m_Land.FindAction("CancelJump", throwIfNotFound: true);
        m_Land_Attack = m_Land.FindAction("Attack", throwIfNotFound: true);
        m_Land_Interact = m_Land.FindAction("Interact", throwIfNotFound: true);
        m_Land_QuickSlot1 = m_Land.FindAction("QuickSlot 1", throwIfNotFound: true);
        m_Land_QuickSlot2 = m_Land.FindAction("QuickSlot 2", throwIfNotFound: true);
        m_Land_QuickSlot3 = m_Land.FindAction("QuickSlot 3", throwIfNotFound: true);
        m_Land_QuickSlot4 = m_Land.FindAction("QuickSlot 4", throwIfNotFound: true);
        // Grab
        m_Grab = asset.FindActionMap("Grab", throwIfNotFound: true);
        m_Grab_Wiggling = m_Grab.FindAction("Wiggling", throwIfNotFound: true);
        m_Grab_JumpOff = m_Grab.FindAction("JumpOff", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Land
    private readonly InputActionMap m_Land;
    private ILandActions m_LandActionsCallbackInterface;
    private readonly InputAction m_Land_Movement;
    private readonly InputAction m_Land_Jump;
    private readonly InputAction m_Land_CancelJump;
    private readonly InputAction m_Land_Attack;
    private readonly InputAction m_Land_Interact;
    private readonly InputAction m_Land_QuickSlot1;
    private readonly InputAction m_Land_QuickSlot2;
    private readonly InputAction m_Land_QuickSlot3;
    private readonly InputAction m_Land_QuickSlot4;
    public struct LandActions
    {
        private @PlayerControls m_Wrapper;
        public LandActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Land_Movement;
        public InputAction @Jump => m_Wrapper.m_Land_Jump;
        public InputAction @CancelJump => m_Wrapper.m_Land_CancelJump;
        public InputAction @Attack => m_Wrapper.m_Land_Attack;
        public InputAction @Interact => m_Wrapper.m_Land_Interact;
        public InputAction @QuickSlot1 => m_Wrapper.m_Land_QuickSlot1;
        public InputAction @QuickSlot2 => m_Wrapper.m_Land_QuickSlot2;
        public InputAction @QuickSlot3 => m_Wrapper.m_Land_QuickSlot3;
        public InputAction @QuickSlot4 => m_Wrapper.m_Land_QuickSlot4;
        public InputActionMap Get() { return m_Wrapper.m_Land; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LandActions set) { return set.Get(); }
        public void SetCallbacks(ILandActions instance)
        {
            if (m_Wrapper.m_LandActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_LandActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_LandActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_LandActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_LandActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_LandActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_LandActionsCallbackInterface.OnJump;
                @CancelJump.started -= m_Wrapper.m_LandActionsCallbackInterface.OnCancelJump;
                @CancelJump.performed -= m_Wrapper.m_LandActionsCallbackInterface.OnCancelJump;
                @CancelJump.canceled -= m_Wrapper.m_LandActionsCallbackInterface.OnCancelJump;
                @Attack.started -= m_Wrapper.m_LandActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_LandActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_LandActionsCallbackInterface.OnAttack;
                @Interact.started -= m_Wrapper.m_LandActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_LandActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_LandActionsCallbackInterface.OnInteract;
                @QuickSlot1.started -= m_Wrapper.m_LandActionsCallbackInterface.OnQuickSlot1;
                @QuickSlot1.performed -= m_Wrapper.m_LandActionsCallbackInterface.OnQuickSlot1;
                @QuickSlot1.canceled -= m_Wrapper.m_LandActionsCallbackInterface.OnQuickSlot1;
                @QuickSlot2.started -= m_Wrapper.m_LandActionsCallbackInterface.OnQuickSlot2;
                @QuickSlot2.performed -= m_Wrapper.m_LandActionsCallbackInterface.OnQuickSlot2;
                @QuickSlot2.canceled -= m_Wrapper.m_LandActionsCallbackInterface.OnQuickSlot2;
                @QuickSlot3.started -= m_Wrapper.m_LandActionsCallbackInterface.OnQuickSlot3;
                @QuickSlot3.performed -= m_Wrapper.m_LandActionsCallbackInterface.OnQuickSlot3;
                @QuickSlot3.canceled -= m_Wrapper.m_LandActionsCallbackInterface.OnQuickSlot3;
                @QuickSlot4.started -= m_Wrapper.m_LandActionsCallbackInterface.OnQuickSlot4;
                @QuickSlot4.performed -= m_Wrapper.m_LandActionsCallbackInterface.OnQuickSlot4;
                @QuickSlot4.canceled -= m_Wrapper.m_LandActionsCallbackInterface.OnQuickSlot4;
            }
            m_Wrapper.m_LandActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @CancelJump.started += instance.OnCancelJump;
                @CancelJump.performed += instance.OnCancelJump;
                @CancelJump.canceled += instance.OnCancelJump;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @QuickSlot1.started += instance.OnQuickSlot1;
                @QuickSlot1.performed += instance.OnQuickSlot1;
                @QuickSlot1.canceled += instance.OnQuickSlot1;
                @QuickSlot2.started += instance.OnQuickSlot2;
                @QuickSlot2.performed += instance.OnQuickSlot2;
                @QuickSlot2.canceled += instance.OnQuickSlot2;
                @QuickSlot3.started += instance.OnQuickSlot3;
                @QuickSlot3.performed += instance.OnQuickSlot3;
                @QuickSlot3.canceled += instance.OnQuickSlot3;
                @QuickSlot4.started += instance.OnQuickSlot4;
                @QuickSlot4.performed += instance.OnQuickSlot4;
                @QuickSlot4.canceled += instance.OnQuickSlot4;
            }
        }
    }
    public LandActions @Land => new LandActions(this);

    // Grab
    private readonly InputActionMap m_Grab;
    private IGrabActions m_GrabActionsCallbackInterface;
    private readonly InputAction m_Grab_Wiggling;
    private readonly InputAction m_Grab_JumpOff;
    public struct GrabActions
    {
        private @PlayerControls m_Wrapper;
        public GrabActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Wiggling => m_Wrapper.m_Grab_Wiggling;
        public InputAction @JumpOff => m_Wrapper.m_Grab_JumpOff;
        public InputActionMap Get() { return m_Wrapper.m_Grab; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GrabActions set) { return set.Get(); }
        public void SetCallbacks(IGrabActions instance)
        {
            if (m_Wrapper.m_GrabActionsCallbackInterface != null)
            {
                @Wiggling.started -= m_Wrapper.m_GrabActionsCallbackInterface.OnWiggling;
                @Wiggling.performed -= m_Wrapper.m_GrabActionsCallbackInterface.OnWiggling;
                @Wiggling.canceled -= m_Wrapper.m_GrabActionsCallbackInterface.OnWiggling;
                @JumpOff.started -= m_Wrapper.m_GrabActionsCallbackInterface.OnJumpOff;
                @JumpOff.performed -= m_Wrapper.m_GrabActionsCallbackInterface.OnJumpOff;
                @JumpOff.canceled -= m_Wrapper.m_GrabActionsCallbackInterface.OnJumpOff;
            }
            m_Wrapper.m_GrabActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Wiggling.started += instance.OnWiggling;
                @Wiggling.performed += instance.OnWiggling;
                @Wiggling.canceled += instance.OnWiggling;
                @JumpOff.started += instance.OnJumpOff;
                @JumpOff.performed += instance.OnJumpOff;
                @JumpOff.canceled += instance.OnJumpOff;
            }
        }
    }
    public GrabActions @Grab => new GrabActions(this);
    public interface ILandActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCancelJump(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnQuickSlot1(InputAction.CallbackContext context);
        void OnQuickSlot2(InputAction.CallbackContext context);
        void OnQuickSlot3(InputAction.CallbackContext context);
        void OnQuickSlot4(InputAction.CallbackContext context);
    }
    public interface IGrabActions
    {
        void OnWiggling(InputAction.CallbackContext context);
        void OnJumpOff(InputAction.CallbackContext context);
    }
}
